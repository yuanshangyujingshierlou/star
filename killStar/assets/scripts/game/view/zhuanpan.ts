import ViewManager from "../../core/Manager/ViewManager";
import BaseView from "../../core/View/BaseView";
import FightManger from "../fight/FightManger";
import { GameJSB } from "../GameJSB";
import ViewFight from "./ViewFight";
const {ccclass, property} = cc._decorator;

@ccclass
export default class zhuanpan extends BaseView {

    @property(cc.Label)
    luckDrawNum:cc.Label = null;

    @property(cc.Node)
    flashLamp:cc.Node = null;

    targetAngle: number;

    ViewFight:ViewFight = FightManger.getInstance().ViewFight;

    socrk:boolean = true; //ËΩ¨ÁõòÈîÅ

    angleStr:string = "";   //Êé•Êî∂ËøôÊ¨°ÊäΩÂà∞‰∫Ü‰ªÄ‰πà
    luckRewardType:number = null;   //ËøôÊ¨°Â•ñÂä±Á±ªÂûã

    gettablenum:number = null; //ÊòØÂê¶Êñ∞Áî®Êà∑Á¨¨‰∏ÄÊ¨°ÊäΩÂ•ñ

    
    num:number = null;
    onLoad () {
        this.num = this.ViewFight.zhuanpanNum || 30;
        this.gettablenum = window['killStar']['configs'].userfirst;
        FightManger.getInstance().Status = 1;
        window['initAngle'] = this.initAngle.bind(this);

        this.luckDrawNum.string = this.ViewFight.zhuanpanNum + "";
    }

    start () {
        // console.log(this.nextLuckRewardType)
        // console.log(this.nextAngleStr)
        this.luckRoutleLight(); //ËΩ¨ÁõòÁÇ´ÂÖâ
    }

    update (dt) {

    }

    luckRoutleLight(){
        let light = cc.find("bg/ÂÖâÊùü",this.node);
        cc.tween(light)
        .repeatForever(
            cc.tween()
            .to(3.6, {angle: 360})
            .call(()=>light.angle = 0)
        )
        .start()

        this.lightLamp();
    }

    initAngle(angle: number){   //‰º†ÂÖ•ËßíÂ∫¶
        this.node.getChildByName("roulette").angle = 0;
        this.targetAngle = angle;
    }

    buildAngle(str:string){
        switch(str){
            case "Â∞ëÈáèÁ∫¢ÂåÖ":    return  -30 + Math.round(Math.random()*60);

            case "1ÂÖÉÊèêÁé∞":    return  30 + Math.round(Math.random()*60);

            case "‰∏≠ÈáèÁ∫¢ÂåÖ":    return  90 + Math.round(Math.random()*60);

            case "3ÂÖÉÊèêÁé∞":   return  150 + Math.round(Math.random()*60);

            case "Â§ßÈáèÁ∫¢ÂåÖ":     return  210 + Math.round(Math.random()*60);

            case "0.3ÂÖÉÊèêÁé∞":     return  270 + Math.round(Math.random()*60);
        }
    }

    clickBtn(){ //Êèê‰∫§ÊµãËØïÂåÖÁöÑÊó∂ÂÄôË¶ÅÊääÁÇπÂáª‰∫ã‰ª∂Êç¢Âà∞ËøôÈáå ‰∏çÁÑ∂‰∏ç‰ºöËß¶ÂèëÂπøÂëä
        if(this.gettablenum === 1)   {
            this.clickEvents();
        }
        if(this.num > 0){
            GameJSB.getAndroidShowRv("Âπ∏ËøêËΩ¨ÁõòÊäΩÂ•ñ");   //Ë∞ÉÁî®ÂÖ®Â±èÂπøÂëä
        }
    }

    clickEvents(){ //ÁÇπÂáªÂºÄÂßãÊäΩÂ•ñ
            cc.find("btn",this.node).active = false  //ÂºÄÂêØÈîÅ
            this.num = this.num - 1;
            this.luckDrawNum.string = this.num + "";
            this.getLuckRoulette();

            // let roulettle = this.node.getChildByName("roulette");
            // let time = 2;

            // this.initAngle(this.buildAngle(this.angleStr||this.ViewFight.angleStr) || Math.random() * 360);

            // this.doing1(roulettle,time,360)
    }




    

    doing1(node:cc.Node,time:number,angle:number){  //Áî±ÊÖ¢Âà∞Âø´
        console.log(this.targetAngle)
        cc.tween(node)
        .to(time,{angle},{easing: t => 8*t*t})
        .call(()=>{
            node.angle = node.angle%360;
            this.doning3(node,360*time/angle/16)
        })
        .start();
    }
    doning3(node:cc.Node, t:number){    //Áî±Âø´Âà∞ÊÖ¢ Ê∏êÊ∏êÂÅúÊ≠¢
        let a: number = 1, b = 2*a;
        let i = 4;
        let angle = i*360 + this.targetAngle;

        /**
         * ÂØπÁß∞ËΩ¥ time = b / 2a;
         * 
         * Âπ≥ÂùáÈÄüÂ∫¶ÔºöDT = 360 * time / angle;
         * 
         * ÂèòÈÄüÂàùÂßãÈÄüÂ∫¶Ôºö T = DT / b;
         * 
         * ÂØπÊé•ÈÄüÂ∫¶Ôºö‰ΩøÂæó T = t; ÂæóÔºöt = 360 * time / angle / b; ---> time = t * b * angle / 360;
         */

        let time = t * b * angle / 360;
        cc.tween(node)
        .to(time / a,{angle: angle / a} ,{easing: t => -a*t*t + b*t})
        .call(()=>{
            cc.find("btn",this.node).active = true; //ÂÖ≥Èó≠ÈîÅ

            if(this.luckRewardType == 1 || this.ViewFight.luckRewardType == 1){
                FightManger.getInstance().ViewFight.hongbaoType = "Âπ∏ËøêËΩ¨Áõò"
                ViewManager.getInstance().ShowView("HongBaoPopup");
            }else if(this.luckRewardType == 2 || this.ViewFight.luckRewardType == 2){
                ViewManager.getInstance().ShowView("TextPopUp");
            }
        })
        .start()
    }

    lightLamp(){    //ÁÅØ
        this.schedule(()=>{
            this.flashLamp.getChildByName("2").active = !this.flashLamp.getChildByName("2").active;
        },0.2)
    }

    getLuckRoulette(){
        let param = {   //Âπ∏ËøêËΩ¨ÁõòÂ•ñÂä±
            type:3,
        }
        GameJSB.getAndroidData("/userReward/rewards",JSON.stringify(param),"rewards")
    //------------------------------------------------------------------------------------------------
        let param2 = {
            code:0,
            cctype:"rewards",
            message:"ÊàêÂäüÔºÅ",
            data:{
                saveintegral:0,
                rewardname:"Âπ∏ËøêËΩ¨Áõò",
                yesdaysave:"474",
                todaysave:81,
                plusintegral:500,
                type:3,
                prizetype:1,
                lasetablenum:25,
                userinteger:19999,
                prizenum:'0.30',
            }
        }
        // GameJSB.obtainHttpData(JSON.stringify(param2));
    }

    clickClose(){
        GameJSB.getAndroidData("/config/configs","","configs");
        ViewManager.getInstance().CloseView("zhuanpan");    //ÈÄÄÂá∫ËΩ¨ÁõòÁïåÈù¢
    }
}
/**
 *                 ‚°ñ‚†í‚†í‚†§‚¢Ñ‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚†Å‚†Ä‚†Ä‚†Ä‚°º‚†Ä‚†Ä‚†Ä‚†Ä ‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∂‚£≤‚°¥‚£ó‚£≤‚°¶‚¢§‚°è‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£∞‚†ã‚†â‚†â‚†ì‚†õ‚†ø‚¢∑‚£∂‚£¶‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢†‚†á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ò‚°á‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°û‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∞‚†á‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°¥‚†ä‚†â‚†≥‚°Ñ‚†Ä‚¢Ä‚£Ä‚£Ä‚°Ä‚†Ä‚£∏‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚†É‚†Ä‚†∞‚†Ü‚£ø‚°û‚†â‚†Ä‚†Ä‚†â‚†≤‚°è‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚¢ß‚°Ä‚£Ä‚°¥‚†õ‚°á‚†Ä‚†à‚†É‚†Ä‚†Ä‚°ó‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£ø‚£±‚†É‚°¥‚†ô‚†¢‚†§‚£Ä‚†§‚°æ‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚°á‚£á‚°º‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚¢∞‚†É‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£∏‚¢†‚£â‚£Ä‚°¥‚†ô‚†Ä‚†Ä‚†Ä‚£º‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°è‚†Ä‚†à‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚†É‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°º‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£∞‚†É‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£Ä‚†§‚†ö‚£∂‚°Ä‚¢†‚†Ñ‚°∞‚†É‚£†‚£á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚¢Ä‚£†‚†î‚£ã‚£∑‚£†‚°û‚†Ä‚†â‚†ô‚†õ‚†ã‚¢©‚°Ä‚†à‚†≥‚£Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚°è‚¢¥‚†ã‚†Å‚†Ä‚£∏          ‚£π‚¢¶‚£∂‚°õ‚†≥‚£Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†ô‚£å‚†≥‚£Ñ‚†Ä‚°á‚†Ä‚†ÄÂú®ÊãâÂ±é‚†Ä  ‚°è‚†Ä‚†Ä‚†à‚†≥‚°å‚£¶‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†à‚¢≥‚£à‚£ª‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∞‚£á‚£Ä‚°†‚†¥‚¢ä‚°°‚†ã‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†≥‚¢ø‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚£ª‚£∂‚°∂‚†ä‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢†‚†ü‚†ô‚†ì‚†í‚†í‚†í‚†í‚¢æ‚°õ‚†ã‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚£†‚†è‚†Ä‚£∏‚†è‚†â‚†â‚†≥‚£Ñ‚†Ä‚†ô‚¢Ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚°∞‚†É‚†Ä‚°¥‚†É üí©‚†Ä‚†Ä‚†à‚¢¶‚°Ä‚†à‚†≥‚°Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚£∏‚†≥‚£§‚†é‚†Äüí©üí©‚†Ä    ‚†ô‚¢Ñ‚°§‚¢Ø‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†ê‚°á‚†∏‚°Ö‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä    ‚†π‚°Ü‚¢≥‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†π‚°Ñ‚†π‚°Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä  ‚£á‚†∏‚°Ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†π‚°Ñ‚¢≥‚°Ä‚†Ä‚†Ä ‚†Ä‚†Ä‚†Ä ‚†Ä‚†Ä    ‚¢π‚°Ä‚£ß‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚¢π‚°§‚†≥‚°Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä  ‚¢Ä‚£∑‚†ö‚£Ü‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚°†‚†ä‚†â‚†â‚¢π‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä    ‚¢∏‚°é‚†â‚†Ä‚†ô‚¢¶‚°Ä‚†Ä
‚†Ä‚†Ä‚†æ‚†§‚†§‚†∂‚†í‚†ä‚†Ä‚†Ä‚†Ä‚†Ä ‚†Ä      ‚†â‚†ô‚†í‚†≤‚†§‚†Ω
 */